* Todo
** Base [11/15]
- [X] Add dynamic/calculated fields
- [X] Create Templates from YAML files
- [X] Convert Templates to YAML
  Currently the values are not being set properly in compound fields.
  The field's `attrs[:value]` receives the value, but the component fields' `attrs[:value]` remains `nil`. So extracting those values via recursive, consistent calls to `val` are not working.
- [X] When converting Template to YAML, add the `template` key
- [X] Are the `value_type`s even being used?
- [X] Convert Templates to HTML Pages
- [X] Convert Templates to HTML Forms
- [X] Move field template name into field class as property?
  Could have `page_file` and `form_file`?
  Because assuming filenames / requiring filenames to conform to rules sucks.
- [X] Make the erb variable name easier-working
- [X] Documentation
- [X] Code cleanup / organization
  Make Page and Form subclasses of template. Make `PageGeneric` a subclass of Page. Then can put properties for fetching a global nav and footer, etc, in Page.
- [ ] Class to manage CLI
- [ ] File loader
  Subclasses, especially.
  Could just use regular `require` lines.
- [ ] Router
- [ ] Address all @TODOs
** Admin panel [0/4]
- [ ] Admin login
- [ ] View pages
- [ ] Edit pages
  Receiving and validating data, whether that's from a YAML file or an HTML form, is essentially the same process: data comes into a function, that function cycles through and calls all appropriate `validate` methods, collects validated data, and directs it somewhere.
- [ ] Upload assets
** Public [0/1]
- [ ] View pages
** Next [0/1]
- [ ] Collections of pages/templates?
